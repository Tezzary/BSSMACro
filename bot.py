SPRINKLERCOUNT = 1
NECTARCONFIRM = (800, 700)
QUESTLOCATION = (900, 900)
RESETCONVERT = True #True for reseting and then emptying when spawning, False for walkking back to hive for emptying
PRIVATESERVERURL = "https://www.roblox.com/games/1537690962?privateServerLinkCode=96488696227249311034897010663996"
MYPRIVATESERVERURL = "https://www.roblox.com/games/1537690962?privateServerLinkCode=32450495031857652803831389743158"

from time import sleep
from time import time
import pyautogui
import imageRecognition
import webbrowser

sleep(5)

pyautogui.PAUSE = 0 

timeOfLastTicket = time() - 3600
timeOfLastNectar = time() - 3600 * 1

def resetCharacter():
    if imageRecognition.isDisconnected():
        handelDisconnect()
    for _ in range(0,50):
        pyautogui.leftClick(QUESTLOCATION[0], QUESTLOCATION[1])
        sleep(0.01)
    pyautogui.press('escape')
    sleep(1)
    pyautogui.press('r')
    sleep(1)
    pyautogui.press('enter')
    sleep(10)
    
    if(imageRecognition.isFacingWrongWay()):
        pyautogui.press(',')
        pyautogui.press(',')
        pyautogui.press(',')
        pyautogui.press(',')
    pyautogui.press('o')
    pyautogui.press('o')
    pyautogui.press('o')
    pyautogui.press('o')
    pyautogui.press('o')

def handelDisconnect():
    webbrowser.open(PRIVATESERVERURL)
    sleep(60)
    pyautogui.keyDown('w')
    sleep(2)
    pyautogui.keyDown('d')
    sleep(8)
    pyautogui.keyUp('w')
    pyautogui.keyUp('d')
    pyautogui.press('.')
    pyautogui.press('.')
    pyautogui.keyDown('d')
    sleep(0.7)
    pyautogui.keyUp('d')
    pyautogui.keyDown('w')
    sleep(10)
    pyautogui.keyUp('w')
    for _ in range(0, 150):
        pyautogui.keyDown('s')
        sleep(0.1)
        pyautogui.keyUp('s')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.keyDown('e')
            sleep(0.1)
            pyautogui.keyUp('e')
            break
def useRedCannon():
    resetCharacter()
    pyautogui.keyDown('w')
    sleep(4)
    pyautogui.keyUp('w')
    pyautogui.keyDown('d')
    sleep(10)
    pyautogui.keyUp('d')
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')
    for _ in range (0, 20):
        pyautogui.keyDown('d')
        sleep(0.1)
        pyautogui.keyUp('d')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.press('e')
            return
    useRedCannon()

def placeSprinklers():
    for _ in range(0, SPRINKLERCOUNT):
        pyautogui.keyDown(' ')
        sleep(0.1)
        pyautogui.keyUp(' ')
        sleep(0.1)
        pyautogui.keyDown('1')
        sleep(0.1)
        pyautogui.keyUp('1')
        sleep(1.5)

def farm():
    timeOfFunctionStart = time()
    while True:
        
        if(imageRecognition.isBagFull()):
            break
        if(time() - timeOfFunctionStart > 60 * 15):
            break
        if (time() - timeOfLastTicket >= 3600):
            break
        if (time() - timeOfLastNectar >= 3600):
            break
        pyautogui.mouseDown()
        pyautogui.keyDown('w')
        sleep(0.25)
        pyautogui.keyUp('w')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('d')
        sleep(0.06)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.5)
        pyautogui.keyUp('w')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.06)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.25)
        pyautogui.keyUp('w')
        pyautogui.mouseUp()
    
def glide():
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')

def jump():
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')

def ticketDispenser():
    useRedCannon()
    pyautogui.keyDown('a')
    pyautogui.keyDown('w')
    sleep(1.5)
    glide()
    sleep(10)
    pyautogui.keyUp('a')
    pyautogui.keyUp('w')
    pyautogui.press(',')
    pyautogui.press(',')
    pyautogui.keyDown('a')
    sleep(5)
    pyautogui.keyUp('a')
    global timeOfLastTicket
    for i in range(0, 10):
        pyautogui.keyDown('s')
        sleep(0.05)
        pyautogui.keyUp('s')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.press('e')
            
            timeOfLastTicket = time()
            break
        elif(i == 9):
            timeOfLastTicket = time()

def finalEmpty():
    if RESETCONVERT == False:
        pyautogui.keyDown('s')
        sleep(0.5)
        pyautogui.keyDown('a')
        sleep(10)
        pyautogui.keyUp('s')
        pyautogui.keyUp('a')
        pyautogui.keyDown('d')
        sleep(0.7)
        pyautogui.keyUp('d')
        pyautogui.keyDown('w')
        sleep(10)
        pyautogui.keyUp('w')
    else:
        resetCharacter()
    for _ in range(0, 150):
        pyautogui.keyDown('s')
        sleep(0.1)
        pyautogui.keyUp('s')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.keyDown('e')
            sleep(0.1)
            pyautogui.keyUp('e')
            for i in range(0, round( 800 / 3)):
                sleep(3)
                if imageRecognition.isOnMakeHoneyPlate():
                    continue
                sleep(5)
                break
            break

def mountainTop():
    useRedCannon()
    sleep(5)
    placeSprinklers()
    farm()
def dandelion():
    useRedCannon()
    sleep(0.4)
    glide()
    pyautogui.keyDown('a')
    pyautogui.keyDown('w')
    sleep(1.3)
    pyautogui.keyUp('a')
    pyautogui.keyUp('w')
    jump()
    sleep(1)
    placeSprinklers()
    sleep(1)
    farm()
    
def pineTree():
    useRedCannon()
    sleep(0.775)
    glide()
    pyautogui.keyDown('s')
    pyautogui.keyDown('d')
    sleep(2)
    pyautogui.keyUp('s')
    pyautogui.keyUp('d')
    sleep(3)
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')
    sleep(2)
    placeSprinklers()
    pyautogui.press('.')
    pyautogui.press('.')
    farm()
    if RESETCONVERT == True:
        finalEmpty()
        return
    pyautogui.keyDown('w')
    pyautogui.keyDown('d')
    sleep(15)
    pyautogui.keyUp('w')
    pyautogui.keyUp('d')
    pyautogui.keyDown('s')
    sleep(15)
    pyautogui.keyUp('s')
    pyautogui.keyDown('a')
    sleep(10)
    pyautogui.keyDown('w')
    sleep(3)
    pyautogui.keyUp('w')
    jump()
    sleep(0.5)
    pyautogui.keyUp('a')
    sleep(2)
    pyautogui.keyDown('w')
    sleep(7)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(5)
    jump()
    sleep(4)
    pyautogui.keyUp('a')
    pyautogui.keyDown('w')
    sleep(3)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(8)
    pyautogui.keyUp('a')
    finalEmpty()

def killStumpSnail():
    useRedCannon()
    pyautogui.keyDown('a')
    sleep(2.05)
    glide()
    pyautogui.keyUp('a')
    sleep(5)
    pyautogui.press(',')
    pyautogui.press(',')
    placeSprinklers()
    while True:
        pyautogui.mouseDown()
        sleep(10)
        pyautogui.mouseUp()

def bugRunCollection():
    for _ in range(0, 10):
        pyautogui.keyDown('w')
        sleep(0.2)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.2)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.4)
        pyautogui.keyUp('s')
        pyautogui.keyDown('a')
        sleep(0.4)
        pyautogui.keyUp('a')
        pyautogui.keyDown('w')
        sleep(0.4)
        pyautogui.keyUp('w')
        pyautogui.keyDown('d')
        sleep(0.2)
        pyautogui.keyUp('d')
        pyautogui.keyDown('s')
        sleep(0.2)
        pyautogui.keyUp('s')

def otherBugRunCollection():
    for _ in range(0, 10):
        pyautogui.keyDown('s')
        sleep(1)
        pyautogui.keyUp('s')
        pyautogui.keyDown('w')
        sleep(1)
        pyautogui.keyUp('w')


def bugRun():
    useRedCannon()
    pyautogui.keyDown('a')
    pyautogui.keyDown('w')
    sleep(1)
    glide()
    sleep(3.8)
    pyautogui.keyUp('a')
    pyautogui.keyUp('w')
    jump()
    sleep(1)
    bugRunCollection()
    pyautogui.keyDown('s')
    sleep(5)
    pyautogui.keyUp('s')
    pyautogui.keyDown('w')
    sleep(0.3)
    pyautogui.keyUp('w')
    bugRunCollection()
    resetCharacter()
    pyautogui.press(',')
    pyautogui.press(',')
    pyautogui.press(',')
    pyautogui.press(',')
    pyautogui.keyDown('w')
    sleep(10)
    pyautogui.keyUp('w')
    otherBugRunCollection()
    pyautogui.keyDown('w')
    sleep(2)
    jump()
    sleep(4)
    pyautogui.keyUp('w')
    pyautogui.keyDown('d')
    sleep(2.5)
    pyautogui.keyUp('d')
    bugRunCollection()
    pyautogui.keyDown('a')
    sleep(1)
    jump()
    sleep(1)
    jump()
    sleep(1)
    jump()
    sleep(1)
    jump()
    sleep(1)
    jump()
    sleep(1)
    jump()
    pyautogui.keyUp('a')
    pyautogui.keyDown('d')
    sleep(0.3)
    pyautogui.keyUp('d')
    bugRunCollection()
    pyautogui.keyDown('d')
    sleep(15)
    pyautogui.keyUp('d')
    pyautogui.keyDown('w')
    sleep(0.4)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(0.5)
    pyautogui.keyUp('a')
    bugRunCollection()
    useRedCannon()
    pyautogui.keyDown('a')
    sleep(2.3)
    glide()
    pyautogui.keyUp('a')
    sleep(2)
    jump()
    sleep(1.5)
    bugRunCollection()
    useRedCannon()
    sleep(0.775)
    glide()
    pyautogui.keyDown('s')
    pyautogui.keyDown('d')
    sleep(2)
    pyautogui.keyUp('s')
    pyautogui.keyUp('d')
    sleep(5)
    bugRunCollection()

def nectar():
    useRedCannon()
    sleep(0.775)
    glide()
    pyautogui.keyDown('s')
    pyautogui.keyDown('d')
    sleep(2)
    pyautogui.keyUp('s')
    pyautogui.keyUp('d')
    sleep(3)
    pyautogui.keyDown(' ')
    sleep(0.1)
    pyautogui.keyUp(' ')
    sleep(2)
    pyautogui.press('.')
    pyautogui.press('.')
    pyautogui.keyDown('w')
    pyautogui.keyDown('d')
    sleep(10)
    pyautogui.keyUp('w')
    pyautogui.keyUp('d')
    for _ in range(0, 10):
        pyautogui.keyDown('a')
        sleep(0.25)
        pyautogui.keyUp('a')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.keyDown('e')
            sleep(0.1)
            pyautogui.keyUp('e')
            pyautogui.leftClick(NECTARCONFIRM[0], NECTARCONFIRM[1])
            break
    pyautogui.keyDown('d')
    sleep(10)
    pyautogui.keyUp('d')
    pyautogui.keyDown('a')
    sleep(1)
    pyautogui.keyUp('a')

    pyautogui.keyDown('5')
    sleep(0.1)
    pyautogui.keyUp('5')
    
    pyautogui.keyDown('d')
    sleep(5)
    pyautogui.keyUp('d')
    pyautogui.keyDown('s')
    sleep(15)
    pyautogui.keyUp('s')
    pyautogui.keyDown('a')
    sleep(10)
    pyautogui.keyDown('w')
    sleep(3)
    pyautogui.keyUp('w')
    jump()
    sleep(0.5)
    pyautogui.keyUp('a')
    pyautogui.keyDown('s')
    sleep(2.5)
    pyautogui.keyUp('s')
    pyautogui.keyDown('w')
    pyautogui.keyDown('d')
    sleep(8)
    pyautogui.keyUp('w')
    pyautogui.keyUp('d')
    pyautogui.keyDown('e')
    sleep(0.1)
    pyautogui.keyUp('e')
    pyautogui.leftClick(NECTARCONFIRM[0], NECTARCONFIRM[1])
    sleep(1)
    pyautogui.keyDown('7')
    sleep(0.1)
    pyautogui.keyUp('7')
    sleep(1)
    pyautogui.keyDown('w')
    jump()
    sleep(10)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(5)
    jump()
    sleep(4)
    pyautogui.keyUp('a')
    pyautogui.keyDown('w')
    sleep(3)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(8)
    pyautogui.keyUp('a')
    for _ in range(0, 10):
        pyautogui.keyDown('s')
        pyautogui.keyDown('d')
        sleep(0.25)
        pyautogui.keyUp('s')
        pyautogui.keyUp('d')
        if(imageRecognition.isOnMakeHoneyPlate()):
            pyautogui.keyDown('e')
            sleep(0.1)
            pyautogui.keyUp('e')
            pyautogui.leftClick(NECTARCONFIRM[0], NECTARCONFIRM[1])
            break
    pyautogui.keyDown('w')
    sleep(8)
    pyautogui.keyUp('w')
    pyautogui.keyDown('a')
    sleep(8)
    pyautogui.keyUp('a')
    pyautogui.keyDown('s')
    pyautogui.keyDown('d')
    sleep(1)
    pyautogui.keyUp('s')
    pyautogui.keyUp('d')
    pyautogui.keyDown('6')
    sleep(0.1)
    pyautogui.keyUp('6')
    
    sleep(1)
    global timeOfLastNectar
    timeOfLastNectar = time()
    #useRedCannon()



#bugRun()
#killStumpSnail()
#nectar()

#rsleep(10)
while(True):
    if (time() - timeOfLastTicket >= 3600):
       ticketDispenser()
    if (time() - timeOfLastNectar >= 3600):
       nectar()
    pineTree()
    #dandelion()


#finalEmpty
# ()
#pineTree()
#mountainTop()